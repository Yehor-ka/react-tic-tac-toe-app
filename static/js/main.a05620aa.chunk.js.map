{"version":3,"sources":["components/Square.jsx","components/Board.jsx","components/Score.jsx","components/ModalResult.jsx","components/SetUsersModal.jsx","components/Game.jsx","calcWinner.js","getLineThrough.js","App.js","index.js"],"names":["Square","value","onClickStep","onClick","className","Board","board","handleStep","lineThroughStyle","style","map","i","Score","usersConfig","firstUsername","firstUserCount","secondUsername","secondUserCount","ModalResult","isOpenResult","winner","setIsOpenResult","newGame","stepsCounter","handleClose","setTimeout","Dialog","open","onClose","DialogContent","Button","marginTop","variant","color","SetUsersModal","isOpenBeginSetting","setUsersConfig","setIsOpenBeginSettings","React","useState","UsersName","setUsersName","useEffect","trim","prevState","onChangeInput","e","name","target","TextField","label","type","fullWidth","onChange","Game","Array","fill","setBoard","isXNext","setIsXNest","setStepsCounter","setLineThroughStyle","useMemo","squares","winnerLines","length","a","b","c","arr","calculateWinner","String","top","left","height","width","transform","getLineThrough","index","newBoard","App","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAUeA,EARA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACvB,OACE,qBAAKC,QAASD,EAAaE,UAAU,SAArC,SACE,+BAAOH,OCeEI,EAjBD,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,iBAClC,OACE,sBAAKJ,UAAU,QAAf,UACE,qBAAKA,UAAU,sBAAsBK,MAAOD,IAC5C,qBAAKJ,UAAU,eAAf,SACCE,EAAMI,KAAI,SAACT,EAAOU,GAAR,OACT,cAAC,EAAD,CAEEV,MAAOA,EACPC,YAAa,kBAAMK,EAAWI,KAFzBA,YCSAC,EAjBD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACPC,EAAmED,EAAnEC,cAAeC,EAAoDF,EAApDE,eAAgBC,EAAoCH,EAApCG,eAAgBC,EAAoBJ,EAApBI,gBACvD,OACE,sBAAKb,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,mBACA,gCACE,qBAAIA,UAAU,cAAd,UACGU,EADH,KACoBC,KAEpB,qBAAIX,UAAU,cAAd,UACGY,EADH,KACqBC,Y,2BCmBdC,EA5BK,SAAC,GAOd,IANLC,EAMI,EANJA,aACAC,EAKI,EALJA,OACAP,EAII,EAJJA,YACAQ,EAGI,EAHJA,gBACAC,EAEI,EAFJA,QACAC,EACI,EADJA,aAEMC,EAAc,WAClBH,GAAgB,GAChBI,WAAWH,EAAS,MAEtB,OACE,cAACI,EAAA,EAAD,CAAQC,KAAMR,EAAcS,QAASJ,EAArC,SACE,eAACK,EAAA,EAAD,WACc,OAAXT,GAAoC,IAAjBG,EAClB,4CACwB,MAAXH,EAAiBP,EAAYC,cAAgBD,EAAYG,kBAGtE,2CAEF,cAACc,EAAA,EAAD,CAAQrB,MAAO,CAACsB,UAAW,IAAKC,QAAQ,WAAWC,MAAM,UAAU9B,QAASqB,EAA5E,4B,iBC6COU,EAnEO,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,mBAAoBC,EAA6C,EAA7CA,eAAgBC,EAA6B,EAA7BA,uBAC3D,EAAkCC,IAAMC,SAAS,CAC/CzB,cAAe,GACfE,eAAgB,KAFlB,mBAAOwB,EAAP,KAAkBC,EAAlB,KAKAH,IAAMI,WAAU,WACwB,KAAnCF,EAAU1B,cAAc6B,QACzBF,GAAa,SAACG,GAAD,mBAAC,eACTA,GADQ,IAEX9B,cAAe,eAGoB,KAApC0B,EAAUxB,eAAe2B,QAC1BF,GAAa,SAACG,GAAD,mBAAC,eACTA,GADQ,IAEX5B,eAAgB,iBAGnB,CAACwB,IAEJ,IAAMK,EAAgB,SAACC,GACrB,IAAMC,EAAOD,EAAEE,OAAOD,KAChB9C,EAAQ6C,EAAEE,OAAO/C,MACvBwC,GAAa,SAACG,GAAD,mBAAC,eACTA,GADQ,kBAEVG,EAAO9C,QAYZ,OACE,cAACyB,EAAA,EAAD,CAAQC,KAAMQ,EAAd,SACE,eAACN,EAAA,EAAD,WACE,cAACoB,EAAA,EAAD,CACEF,KAAK,gBACLG,MAAM,iBACNC,KAAK,OACLC,WAAS,EACTC,SAAUR,IAEZ,cAACI,EAAA,EAAD,CACEF,KAAK,iBACLG,MAAM,kBACNC,KAAK,OACLC,WAAS,EACTC,SAAUR,IAEZ,cAACf,EAAA,EAAD,CACErB,MAAO,CAAEsB,UAAW,IACpBC,QAAQ,YACRC,MAAM,YACN9B,QA7BiB,WACvBiC,GAAe,SAACQ,GAAD,mBAAC,eACXA,GACAJ,MAELH,GAAuB,IAoBnB,+BCkCOiB,EApFF,WACX,MAA0BhB,IAAMC,SAASgB,MAAM,GAAGC,KAAK,OAAvD,mBAAOlD,EAAP,KAAcmD,EAAd,KACA,EAA8BnB,IAAMC,UAAS,GAA7C,mBAAOmB,EAAP,KAAgBC,EAAhB,KACA,EAAwCrB,IAAMC,UAAS,GAAvD,mBAAOpB,EAAP,KAAqBE,EAArB,KACA,EAAsCiB,IAAMC,SAAS,CACnDzB,cAAe,GACfC,eAAgB,EAChBC,eAAgB,GAChBC,gBAAiB,IAJnB,mBAAOJ,EAAP,KAAoBuB,EAApB,KAMA,EAAqDE,IAAMC,UAAS,GAApE,mBAAOJ,EAAP,KAA2BE,EAA3B,KACA,EAAwCC,IAAMC,SAAS,GAAvD,mBAAOhB,EAAP,KAAqBqC,EAArB,KACA,EAAgDtB,IAAMC,SAAS,IAA/D,mBAAO/B,EAAP,KAAyBqD,EAAzB,KAEA,EAAwBvB,IAAMwB,SAAQ,kBCtBT,SAACC,GAY9B,IAXA,IAAMC,EAAc,CAClB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGArD,EAAI,EAAGA,EAAIqD,EAAYC,OAAQtD,IAAK,CAC3C,kBAAkBqD,EAAYrD,GAA9B,GAAOuD,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIL,EAAQG,IAAMH,EAAQG,KAAOH,EAAQI,IAAMJ,EAAQG,KAAOH,EAAQK,GACpE,MAAO,CACLhD,OAAQ2C,EAAQG,GAChBG,IAAK,CAACH,EAAGC,EAAGC,IAIlB,MAAO,CACLhD,OAAQ,KACRiD,IAAK,EAAE,GAAI,GAAI,IDD2BC,CAAgBhE,KAAQ,CAACA,IAA7Dc,EAAR,EAAQA,OAAQiD,EAAhB,EAAgBA,IAEhB/B,IAAMI,WAAU,WACdL,GAAuB,KACtB,IAEHC,IAAMI,WAAU,WACdmB,EE7B0B,SAACQ,GAE7B,OADmB,IAAME,OAAOF,GAAO,KAErC,IAAK,UACH,MAAO,CACLG,IAAK,OACLC,KAAM,MACNC,OAAQ,OACRC,MAAO,SAEX,IAAK,UACH,MAAO,CACLH,IAAK,QACLC,KAAM,MACNC,OAAQ,OACRC,MAAO,SAEX,IAAK,UACH,MAAO,CACLH,IAAK,QACLC,KAAM,MACNC,OAAQ,OACRC,MAAO,SAEX,IAAK,UACH,MAAO,CACLH,IAAK,QACLC,KAAM,QACNC,OAAQ,QACRC,MAAO,OACPC,UAAW,kBAEf,IAAK,UACH,MAAO,CACLJ,IAAK,QACLC,KAAM,QACNC,OAAQ,QACRC,MAAO,OACPC,UAAW,iBAEf,IAAK,UACH,MAAO,CACLJ,IAAK,MACLC,KAAM,OACNC,OAAQ,QACRC,MAAO,QAEX,IAAK,UACH,MAAO,CACLH,IAAK,MACLC,KAAM,QACNC,OAAQ,QACRC,MAAO,QAEX,IAAK,UACH,MAAO,CACLH,IAAK,MACLC,KAAM,QACNC,OAAQ,QACRC,MAAO,QAEX,QACE,OAAO,MFjCWE,CAAeR,MAClC,CAACA,IAEJ/B,IAAMI,WAAU,WACC,OAAXtB,GACFC,GAAgB,GAChBsC,GAAW,GACXC,EAAgB,GAEdxB,EADa,MAAXhB,EACa,SAACwB,GAAD,mBAAC,eACXA,GADU,IAEb7B,eAAgB6B,EAAU7B,eAAiB,KAG9B,SAAC6B,GAAD,mBAAC,eACXA,GADU,IAEb3B,gBAAiB2B,EAAU3B,gBAAkB,OAG7B,OAAXG,GAAoC,IAAjBG,IAC5BF,GAAgB,GAChBuC,EAAgB,MAEjB,CAACtD,IAiBJ,OACE,qCACE,sBAAKF,UAAU,UAAf,UACE,cAAC,EAAD,CAAOI,iBAAkBA,EAAkBF,MAAOA,EAAOC,WAlB5C,SAACuE,GAClB,IAAMC,EAAQ,YAAOzE,GACjBc,GAAU2D,EAASD,KACvBlB,GAAgB,SAAChB,GAAD,OAAeA,EAAY,KAE3CmC,EAASD,GAASpB,EAAU,IAAM,IAElCD,EAASsB,GACTpB,GAAYD,OAWR,cAAC,EAAD,CAAO7C,YAAaA,OAEtB,cAAC,EAAD,CACES,QAXU,WACdmC,EAASF,MAAM,GAAGC,KAAK,QAWnB3C,YAAaA,EACbM,aAAcA,EACdE,gBAAiBA,EACjBD,OAAQA,EACRG,aAAcA,IAEhB,cAAC,EAAD,CACEY,mBAAoBA,EACpBE,uBAAwBA,EACxBD,eAAgBA,Q,SGxET4C,EAVH,WACV,OACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,qBAAK9E,UAAU,YAAf,SACE,cAAC,EAAD,S,MCFR+E,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.a05620aa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Square = ({ value, onClickStep }) => {\r\n  return (\r\n    <div onClick={onClickStep} className=\"square\">\r\n      <span>{value}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst Board = ({ board, handleStep, lineThroughStyle }) => {\r\n  return (\r\n    <div className=\"board\">\r\n      <div className=\"board__line-through\" style={lineThroughStyle}></div>\r\n      <div className=\"board__field\">\r\n      {board.map((value, i) => (\r\n        <Square\r\n          key={i}\r\n          value={value}\r\n          onClickStep={() => handleStep(i)}\r\n        />\r\n      ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\r\n\r\nconst Score = ({ usersConfig }) => {\r\n  const { firstUsername, firstUserCount, secondUsername, secondUserCount } = usersConfig;\r\n  return (\r\n    <div className=\"score\">\r\n      <h1 className=\"score__text\">Score</h1>\r\n      <div>\r\n        <h3 className=\"score__text\">\r\n          {firstUsername}: {firstUserCount}\r\n        </h3>\r\n        <h3 className=\"score__text\">\r\n          {secondUsername}: {secondUserCount}\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport { Dialog, DialogContent, Button } from '@material-ui/core';\r\n\r\nconst ModalResult = ({\r\n  isOpenResult,\r\n  winner,\r\n  usersConfig,\r\n  setIsOpenResult,\r\n  newGame,\r\n  stepsCounter,\r\n}) => {\r\n  const handleClose = () => {\r\n    setIsOpenResult(false);\r\n    setTimeout(newGame, 100)\r\n  };\r\n  return (\r\n    <Dialog open={isOpenResult} onClose={handleClose}>\r\n      <DialogContent>\r\n        {winner !== null && stepsCounter !== 9 ? (\r\n          <h2>\r\n            Winner is {winner === 'X' ? usersConfig.firstUsername : usersConfig.secondUsername}\r\n          </h2>\r\n        ) : (\r\n          <h2>It`s draw</h2>\r\n        )}\r\n        <Button style={{marginTop: 15}} variant=\"outlined\" color=\"primary\" onClick={handleClose}>New Game</Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalResult;\r\n","import React from 'react';\r\nimport { Dialog, DialogContent, TextField, Button } from '@material-ui/core';\r\n\r\nconst SetUsersModal = ({ isOpenBeginSetting, setUsersConfig, setIsOpenBeginSettings }) => {\r\n  const [UsersName, setUsersName] = React.useState({\r\n    firstUsername: '',\r\n    secondUsername: ''\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if(UsersName.firstUsername.trim() === '') {\r\n      setUsersName((prevState) => ({\r\n        ...prevState,\r\n        firstUsername: 'Player1',\r\n      }));\r\n    }\r\n    if(UsersName.secondUsername.trim() === '') {\r\n      setUsersName((prevState) => ({\r\n        ...prevState,\r\n        secondUsername: 'Player2',\r\n      }));\r\n    }\r\n  }, [UsersName])\r\n\r\n  const onChangeInput = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setUsersName((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleAddPlayers = () => {\r\n    setUsersConfig((prevState) => ({\r\n      ...prevState,\r\n      ...UsersName,\r\n    }));\r\n    setIsOpenBeginSettings(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpenBeginSetting}>\r\n      <DialogContent>\r\n        <TextField\r\n          name=\"firstUsername\"\r\n          label=\"First Username\"\r\n          type=\"text\"\r\n          fullWidth\r\n          onChange={onChangeInput}\r\n        />\r\n        <TextField\r\n          name=\"secondUsername\"\r\n          label=\"Second Username\"\r\n          type=\"text\"\r\n          fullWidth\r\n          onChange={onChangeInput}\r\n        />\r\n        <Button\r\n          style={{ marginTop: 15 }}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={handleAddPlayers}>\r\n          Add players\r\n        </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SetUsersModal;\r\n","import React from 'react';\r\nimport Board from './Board';\r\nimport Score from './Score';\r\nimport { calculateWinner } from '../calcWinner';\r\nimport ModalResult from './ModalResult';\r\nimport SetUsersModal from './SetUsersModal';\r\nimport { getLineThrough } from '../getLineThrough';\r\n\r\nconst Game = () => {\r\n  const [board, setBoard] = React.useState(Array(9).fill(null));\r\n  const [isXNext, setIsXNest] = React.useState(true);\r\n  const [isOpenResult, setIsOpenResult] = React.useState(false);\r\n  const [usersConfig, setUsersConfig] = React.useState({\r\n    firstUsername: '',\r\n    firstUserCount: 0,\r\n    secondUsername: '',\r\n    secondUserCount: 0,\r\n  });\r\n  const [isOpenBeginSetting, setIsOpenBeginSettings] = React.useState(false);\r\n  const [stepsCounter, setStepsCounter] = React.useState(0);\r\n  const [lineThroughStyle, setLineThroughStyle] = React.useState({});\r\n\r\n  const { winner, arr } = React.useMemo(() => calculateWinner(board), [board]);\r\n\r\n  React.useEffect(() => {\r\n    setIsOpenBeginSettings(true);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    setLineThroughStyle(getLineThrough(arr));\r\n  }, [arr]);\r\n\r\n  React.useEffect(() => {\r\n    if (winner !== null) {\r\n      setIsOpenResult(true);\r\n      setIsXNest(true);\r\n      setStepsCounter(0);\r\n      if (winner === 'X') {\r\n        setUsersConfig((prevState) => ({\r\n          ...prevState,\r\n          firstUserCount: prevState.firstUserCount + 1,\r\n        }));\r\n      } else {\r\n        setUsersConfig((prevState) => ({\r\n          ...prevState,\r\n          secondUserCount: prevState.secondUserCount + 1,\r\n        }));\r\n      }\r\n    } else if (winner === null && stepsCounter === 9) {\r\n      setIsOpenResult(true);\r\n      setStepsCounter(0);\r\n    }\r\n  }, [board]);\r\n\r\n  const handleStep = (index) => {\r\n    const newBoard = [...board];\r\n    if (winner || newBoard[index]) return;\r\n    setStepsCounter((prevState) => prevState + 1);\r\n\r\n    newBoard[index] = isXNext ? 'X' : 'O';\r\n\r\n    setBoard(newBoard);\r\n    setIsXNest(!isXNext);\r\n  };\r\n\r\n  const newGame = () => {\r\n    setBoard(Array(9).fill(null));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Board lineThroughStyle={lineThroughStyle} board={board} handleStep={handleStep} />\r\n        <Score usersConfig={usersConfig} />\r\n      </div>\r\n      <ModalResult\r\n        newGame={newGame}\r\n        usersConfig={usersConfig}\r\n        isOpenResult={isOpenResult}\r\n        setIsOpenResult={setIsOpenResult}\r\n        winner={winner}\r\n        stepsCounter={stepsCounter}\r\n      />\r\n      <SetUsersModal\r\n        isOpenBeginSetting={isOpenBeginSetting}\r\n        setIsOpenBeginSettings={setIsOpenBeginSettings}\r\n        setUsersConfig={setUsersConfig}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export const calculateWinner = (squares) => {\r\n  const winnerLines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < winnerLines.length; i++) {\r\n    const [a, b, c] = winnerLines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {\r\n        winner: squares[a],\r\n        arr: [a, b, c],\r\n      };\r\n    }\r\n  }\r\n  return {\r\n    winner: null,\r\n    arr: [-1, -1, -1],\r\n  };\r\n};\r\n","export const getLineThrough = (arr) => {\r\n  const winningPos = '[' + String(arr) + ']';\r\n  switch (winningPos) {\r\n    case '[0,1,2]':\r\n      return {\r\n        top: '45px',\r\n        left: '5px',\r\n        height: '10px',\r\n        width: '320px',\r\n      };\r\n    case '[3,4,5]':\r\n      return {\r\n        top: '155px',\r\n        left: '5px',\r\n        height: '10px',\r\n        width: '320px',\r\n      };\r\n    case '[6,7,8]':\r\n      return {\r\n        top: '265px',\r\n        left: '5px',\r\n        height: '10px',\r\n        width: '320px',\r\n      };\r\n    case '[0,4,8]':\r\n      return {\r\n        top: '-24px',\r\n        left: '165px',\r\n        height: '380px',\r\n        width: '10px',\r\n        transform: 'rotate(-45deg)',\r\n      };\r\n    case '[2,4,6]':\r\n      return {\r\n        top: '-24px',\r\n        left: '165px',\r\n        height: '380px',\r\n        width: '10px',\r\n        transform: 'rotate(45deg)',\r\n      };\r\n    case '[0,3,6]':\r\n      return {\r\n        top: '5px',\r\n        left: '45px',\r\n        height: '320px',\r\n        width: '10px',\r\n      };\r\n    case '[1,4,7]':\r\n      return {\r\n        top: '5px',\r\n        left: '160px',\r\n        height: '320px',\r\n        width: '10px',\r\n      };\r\n    case '[2,5,8]':\r\n      return {\r\n        top: '5px',\r\n        left: '270px',\r\n        height: '320px',\r\n        width: '10px',\r\n      };\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\n/* [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6], */\r\n","import React from 'react';\r\nimport Game from './components/Game';\r\nimport { Container } from '@material-ui/core';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <div className=\"container\">\r\n        <Game />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.scss'\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}